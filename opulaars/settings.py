"""
Django settings for opulaars project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()  
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!((jgz7nkj@ju5mhp4jr^1(*n1tpp&!*#h4mb=e6ko0q*ntmr1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework_simplejwt',
    "corsheaders",
    'api',
    'drf_yasg',
    "opulaadmin",
    "opulatenant"
]

MIDDLEWARE = [
    # 'api.middlewares.TenantMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'api.middlewares.JWTAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middlewares.TenantMiddleware', 
]

ROOT_URLCONF = 'opulaars.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'opulaars.wsgi.application'
AUTH_USER_MODEL = 'opulaadmin.AuthenticationModel'

REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (
    
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': str(os.getenv('ENGINE')),
        'NAME': str(os.getenv('DB_NAME')),
        'USER': str(os.getenv('DB_USER')),
        'PASSWORD': str(os.getenv('DB_PASSWORD')), 
        'HOST': str(os.getenv('DB_HOST')),
        'PORT': str(os.getenv('DB_PORT')),
        # 'OPTIONS': {
        #     'options': '-c search_path=public,admin_management,master,',
        # },
    },
}

DATABASE_ROUTERS = ['api.db_routers.AdminSchemaRouter', 'api.db_routers.TenantSchemaRouter']



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
PUBLIC_DOMAIN = 'http://59.144.171.90:8000/'
FERNET_KEY = str(os.getenv('FERNET_KEY'))

OPULA_DOMAIN = str(os.getenv("OPULA_DOMAIN"))
CORS_ALLOWED_ORIGINS = [
    "http://59.144.171.90:8000",
    "http://59.144.171.90:3001",
    # "http://59.144.171.90:8001",
    # "https://localhost:8000",           
    # "http://localhost:8080",
    # "http://localhost:3001",
    # "http://localhost:3000",
    # "http://127.0.0.1:8000",
]

SECURE_COOKIES = False  
# JWT_TOKEN_LIFETIME = 60 * 60  
# JWT_REFRESH_TOKEN_LIFETIME = 60 * 60 * 24 * 7

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'content-type',
    'accept',
    'authorization',
    'x-csrftoken',
    'access-control-allow-origin',
]

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',  # Change this to match your Redis server config
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

REDIS_URL = 'redis://127.0.0.1:6379/1'  # Update with your Redis server details
JWT_TOKEN_LIFETIME = 3600  # 1 hour
JWT_REFRESH_TOKEN_LIFETIME = 86400  


# SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# SESSION_COOKIE_NAME = 'sessionid' 
# print("SESSION_COOKIE_NAME",SESSION_COOKIE_NAME)
# SESSION_COOKIE_AGE = 3600  
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False 

# SESSION_COOKIE_DOMAIN = '.localhost:8000' 
# print("SESSION_COOKIE_NAME",SESSION_COOKIE_DOMAIN)
# SESSION_COOKIE_PATH = '/' 
# SESSION_COOKIE_HTTPONLY = True 
# # SESSION_COOKIE_SECURE = False 
# SESSION_SAVE_EVERY_REQUEST = False 
# SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'
# SESSION_DATABASE = 'default'

# SESSION_COOKIE_SECURE = True  # Use HTTPS for session cookies
# CSRF_COOKIE_SECURE = True  # Use HTTPS for CSRF cookies
# SESSION_ENGINE = 'django.contrib.sessions.backends.cache'





