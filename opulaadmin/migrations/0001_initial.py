# Generated by Django 4.2.16 on 2024-12-14 11:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import opulaadmin.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthenticationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=128)),
                ('am_mobile_no', models.CharField(help_text='Enter mobile number', max_length=16, validators=[django.core.validators.RegexValidator(message='Mobile number must be 10 digits', regex='^\\+?\\d{1,4}?\\s?\\d{10}$')])),
                ('am_is_deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('am_created_at', models.DateTimeField(auto_now_add=True)),
                ('am_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'admin_management"."authmanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CountryMasterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm_international_dial', models.CharField(max_length=15)),
                ('cm_country_code', models.CharField(max_length=5)),
                ('cm_country_name', models.CharField(max_length=50)),
                ('cm_created_at', models.DateTimeField(auto_now_add=True)),
                ('cm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'master"."countrymanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HiringModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hm_job_title', models.CharField(max_length=30)),
                ('hm_job_description', models.TextField()),
                ('hm_start_date', models.CharField(max_length=15)),
                ('hm_experience', models.CharField(max_length=10)),
                ('hm_salary', models.CharField(max_length=20)),
                ('hm_qualification', models.TextField()),
                ('hm_responsibility', models.TextField()),
                ('hm_last_submission_data', models.CharField(max_length=15)),
                ('hm_created_at', models.DateTimeField(auto_now_add=True)),
                ('hm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'admin_management"."hiringmanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IndustryMasterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('im_industry', models.CharField(max_length=30)),
                ('im_created_at', models.DateTimeField(auto_now_add=True)),
                ('im_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'master"."industrymanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JobSkillModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jsm_skill', models.CharField(max_length=30)),
                ('jsm_created_at', models.DateTimeField(auto_now_add=True)),
                ('jsm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'admin_management"."jobskillmanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ppm_title', models.CharField(max_length=100)),
                ('ppm_content', models.TextField()),
                ('ppm_created_at', models.DateTimeField(auto_now_add=True)),
                ('ppm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'admin_management"."privacypolicymanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RoleManagementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rm_role', models.CharField(max_length=15)),
                ('rm_created_at', models.DateTimeField(auto_now_add=True)),
                ('rm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'master"."rolemanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TermsAndConditionmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tacm_title', models.CharField(max_length=100)),
                ('tacm_content', models.TextField()),
                ('tacm_created_at', models.DateTimeField(auto_now_add=True)),
                ('tacm_updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'admin_management"."termandconditionmanagement',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TenantModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tm_db_name', models.CharField(max_length=70, unique=True)),
                ('tm_db_user', models.CharField(max_length=244)),
                ('tm_db_password', models.CharField(max_length=256)),
                ('tm_domain_name', models.CharField(max_length=30, null=True, unique=True, validators=[opulaadmin.models.TenantModel.validate_subdomain])),
                ('tm_created_at', models.DateTimeField(auto_now_add=True)),
                ('tm_updated_at', models.DateTimeField(auto_now=True)),
                ('tm_auth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_management"."tenantmanagement',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='authenticationmodel',
            name='am_role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='opulaadmin.rolemanagementmodel'),
        ),
        migrations.AddField(
            model_name='authenticationmodel',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_groups', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='authenticationmodel',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
